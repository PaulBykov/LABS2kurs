<Application x:Class="_4.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:_4"
             StartupUri="MainWindow.xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/assets/resources/lang.ru-RU.xaml"/>

                <ResourceDictionary Source="/assets/resources/purple.xaml"/>
            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="topButton" TargetType="Button">
                <Setter Property="Background" Value="white"/>
                <Setter Property="Foreground" Value="#d0c0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>

                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#dcdcff"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="menuButton" TargetType="Button">
                <Style.Setters>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="TextBlock.FontSize" Value="20"/>
                    <Setter Property="TextBlock.FontStyle" Value="Oblique"/>
                    <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                </Style.Setters>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Indigo"/>
                        <Setter Property="Foreground" Value="black"/>
                    </Trigger>
                    
                    <!--Действие на событие MouseEnter-->
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="FontSize" To="36"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                    </EventTrigger>
                        <!--Действие на событие MouseLeave-->
                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="FontSize" To="18"  />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="coloredButton" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource c_btn_background}"/>
                <Setter Property="Foreground" Value="white"/>
                <Setter Property="TextBlock.FontSize" Value="14"/>
                <Setter Property="TextBlock.FontStyle" Value="Oblique"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                <ContentPresenter Content="{DynamicResource m_add}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource c_btn_background_light}"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="coloredButton2" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource c_btn_background_light}"/>
                <Setter Property="Foreground" Value="white"/>
                <Setter Property="TextBlock.FontSize" Value="12"/>
                <Setter Property="TextBlock.FontStyle" Value="Oblique"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                <ContentPresenter Content="{DynamicResource m_restore}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource c_btn_background}"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="tabButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="black"/>
                <Setter Property="BorderThickness" Value="0"/>

                <Setter Property="TextBlock.FontSize" Value="16"/>
                <Setter Property="TextBlock.FontStyle" Value="Oblique"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>


                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="black"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="tabBlock" TargetType="StackPanel">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Margin" Value="50 0 0 0"/>
                <Setter Property="Width" Value="80"/>
            </Style>

            <Style x:Key="searchBar" TargetType="TextBox">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Padding" Value="15 10"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 10"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                        BorderThickness="1" BorderBrush="#e0e6ed">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseCaptured" Value="True">
                                    <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                                </Trigger>

                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--gridButton-->
            <Style x:Key="gridEditButton" TargetType="Button">
                <Setter Property="Background" Value="SlateGray"/>
                <Setter Property="BorderBrush" Value="#4d5863"/>
                <Setter Property="Foreground" Value="white"/>

                <Setter Property="TextBlock.FontSize" Value="16"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>


                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter Content="Добавить" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="gridRemoveButton" TargetType="Button">
                <Setter Property="Background" Value="darkred"/>
                <Setter Property="BorderBrush" Value="brown"/>
                <Setter Property="Foreground" Value="white"/>

                <Setter Property="TextBlock.FontSize" Value="16"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>


                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter Content="Добавить" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>


            <!--#region Datagrid Style-->
            <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
            <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeWE"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridColumnHeaderStyle2" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsClickable="{TemplateBinding CanUserSort}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </theme:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                    <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsNewItem" Value="True">
                        <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                    </Trigger>



                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridCellStyle2" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#aea1ed"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="#ae7fff"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="true"/>
                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="#aea1ed"/>
                        <Setter Property="BorderBrush" Value="#aea1ed"/>
                        <Setter Property="Foreground" Value="#aea1ed"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#aea1ed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--#endregion Datagrid Style-->

            
            <Style x:Key="mt" TargetType="DockPanel">
                <Setter Property="Margin" Value="0 5 0 0"/>
            </Style>

            
            <!--#region Order Style-->
            <Style x:Key="boldName" TargetType="TextBlock">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="black"/>

                <Setter Property="TextBlock.FontSize" Value="16"/>
                <Setter Property="TextBlock.FontStyle" Value="Oblique"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>


                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="black"/>
                    </Trigger>
                </Style.Triggers>

            </Style>
            <Style x:Key="obliqueName" TargetType="TextBlock">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="black"/>

                <Setter Property="TextBlock.FontSize" Value="16"/>
                <Setter Property="TextBlock.FontStyle" Value="Oblique"/>
                <Setter Property="TextBlock.FontWeight" Value="Light"/>


                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="black"/>
                    </Trigger>
                </Style.Triggers>

            </Style>


            <Style x:Key="confirmButton" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource c_btn_background}"/>
                <Setter Property="Foreground" Value="white"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="TextBlock.FontSize" Value="20"/>
                <Setter Property="TextBlock.FontStyle" Value="Oblique"/>
                <Setter Property="TextBlock.FontWeight" Value="Bold"/>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Indigo"/>
                        <Setter Property="Foreground" Value="{DynamicResource c_btn_background}"/>
                    </Trigger>

                </Style.Triggers>
            </Style>
            <!--#endregion Order Style-->


            <!--trigers-->
            <Style x:Key="check" TargetType="CheckBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=checkbox_element, Path=IsChecked}"
                                 Value="True">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="IsChecked" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!--в datagrid style-->
            <!--в confirmButton-->

        </ResourceDictionary>
    </Application.Resources>
</Application>
